{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro/Downloads/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/macbookpro/Downloads/robofriends/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CardList from \"./components/CardList\";\nimport SearchBox from \"./components/SearchBox\";\nimport Scroll from \"./components/Scroll\";\nimport \".//App.css\";\nimport \"tachyons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    robots = _useState2[0],\n    setRobots = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchfield = _useState4[0],\n    setSearchfield = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1]; // for demo purposes\n\n  useEffect(function () {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(function (response) {\n      return response.json();\n    }).then(function (users) {\n      setRobots(users);\n    });\n    // console.log(count)\n  }, []); // if you add count, only run if count changes.\n\n  var onSearchChange = function onSearchChange(event) {\n    setSearchfield(event.target.value);\n  };\n  var filteredRobots = robots.filter(function (robot) {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n  return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fEmuX/jVp10L9OxpOMyD1BICLKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CardList","SearchBox","Scroll","App","robots","setRobots","searchfield","setSearchfield","count","setCount","fetch","then","response","json","users","onSearchChange","event","target","value","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"sources":["/Users/macbookpro/Downloads/robofriends/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CardList from \"./components/CardList\";\nimport SearchBox from \"./components/SearchBox\";\nimport Scroll from \"./components/Scroll\";\nimport \".//App.css\";\nimport \"tachyons\";\n\nfunction App() {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState(\"\");\n  const [count, setCount] = useState(0); // for demo purposes\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        setRobots(users);\n      });\n    // console.log(count)\n  }, []); // if you add count, only run if count changes.\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n  };\n\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  return !robots.length ? (\n    <h1>Loading</h1>\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"f1\">RoboFriends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,YAAY;AACnB,OAAO,UAAU;AAAC;AAElB,SAASC,GAAG,GAAG;EAAA;EACb,gBAA4BL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCM,MAAM;IAAEC,SAAS;EACxB,iBAAsCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CQ,WAAW;IAAEC,cAAc;EAClC,iBAA0BT,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9BU,KAAK;IAAEC,QAAQ,iBAAgB,CAAC;;EAEvCV,SAAS,CAAC,YAAM;IACdW,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;IAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,KAAK,EAAK;MACfT,SAAS,CAACS,KAAK,CAAC;IAClB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;IAChCT,cAAc,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,IAAMC,cAAc,GAAGf,MAAM,CAACgB,MAAM,CAAC,UAACC,KAAK,EAAK;IAC9C,OAAOA,KAAK,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAClB,WAAW,CAACiB,WAAW,EAAE,CAAC;EACrE,CAAC,CAAC;EAEF,OAAO,CAACnB,MAAM,CAACqB,MAAM,gBACnB;IAAA,UAAI;EAAO;IAAA;IAAA;IAAA;EAAA,QAAK,gBAEhB;IAAK,SAAS,EAAC,IAAI;IAAA,wBACjB;MAAI,SAAS,EAAC,IAAI;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACnC,QAAC,SAAS;MAAC,YAAY,EAAEV;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3C,QAAC,MAAM;MAAA,uBACL,QAAC,QAAQ;QAAC,MAAM,EAAEI;MAAe;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA;IAAA;IAAA;IAAA;EAAA,QAEZ;AACH;AAAC,GAjCQhB,GAAG;AAAA,KAAHA,GAAG;AAmCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}